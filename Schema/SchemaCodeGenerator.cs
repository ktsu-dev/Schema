// Copyright (c) ktsu.dev
// All rights reserved.
// Licensed under the MIT license.

namespace ktsu.Schema;

using System.Text.Json.Serialization;

using ktsu.StrongPaths;

/// <summary>
/// Abstract base class for generating code from a schema.
/// </summary>
public abstract class SchemaCodeGenerator : SchemaChild<CodeGeneratorName>
{
	/// <summary>
	/// Comment to be included at the top of generated files.
	/// </summary>
	internal const string FileComment = "Auto-generated by SchemaCodeGenerator - Do not manually edit!";

	/// <summary>
	/// Gets or sets a value indicating whether the code generator is enabled.
	/// </summary>
	[JsonInclude] public bool Enabled { get; set; } = true;

	/// <summary>
	/// Gets or sets the output directory for the generated code.
	/// </summary>
	[JsonInclude] public RelativeDirectoryPath OutputDirectory { get; set; } = new();

	/// <summary>
	/// Generates code for the specified schema.
	/// </summary>
	/// <param name="schema">The schema to generate code for.</param>
	protected abstract void GenerateCodeFor(Schema schema);

	/// <summary>
	/// Generates code for the specified schema class.
	/// </summary>
	/// <param name="schemaClass">The schema class to generate code for.</param>
	protected abstract void GenerateCodeFor(SchemaClass schemaClass);

	/// <summary>
	/// Generates code for the specified schema enum.
	/// </summary>
	/// <param name="schemaEnum">The schema enum to generate code for.</param>
	protected abstract void GenerateCodeFor(SchemaEnum schemaEnum);

	/// <summary>
	/// Generates code for the specified schema member.
	/// </summary>
	/// <param name="schemaMember">The schema member to generate code for.</param>
	protected abstract void GenerateCodeFor(SchemaMember schemaMember);

	/// <summary>
	/// Attempts to remove this code generator from its parent schema.
	/// </summary>
	/// <returns>True if the code generator was removed, false otherwise.</returns>
	/// <exception cref="InvalidOperationException">Thrown when the code generator does not belong to a schema.</exception>
	public override bool TryRemove() => ParentSchema?.TryRemoveCodeGenerator(this) ?? throw new InvalidOperationException("You can not remove a SchemaCodeGenerator that doesn't belong to a Schema");
}
